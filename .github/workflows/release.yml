# Name of our action
name: Release

# The event that will trigger the action
on:
  push:
    branches: [main]

# What the action will do
jobs:
  # # Run interaction tests
  # interaction-tests:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v3
  #       with:
  #         #ðŸ‘‡ Sets the version of Node.js to use
  #         node-version: 18
  #     - name: Install dependencies
  #       run: yarn
  #     - name: Install Playwright
  #       run: npx playwright install --with-deps
  #     - name: Build Storybook
  #       run: yarn build-storybook --quiet
  #     - name: Serve Storybook and run tests
  #       run: |
  #         npx concurrently -k -s first -n "SB,TEST" -c "magenta,blue"             "npx http-server storybook-static --port 6006 --silent"             "npx wait-on tcp:127.0.0.1:6006 && yarn test-storybook"

  # Build and deploy the Storybook
  build-and-deploy-storybook:
    runs-on: ubuntu-latest
    name: Build and Deploy Storybook
    if: 'contains(github.event.head_commit.message, "--deploy-storybook")'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: yarn install

      - name: Build Storybook
        run: npm run build-storybook

      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APP_DEPLOYMENT_TOKEN }}
          repo_token: ${{ secrets.REPO_GIT_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: 'upload'
          app_location: '/' # App source code path
          output_location: '/storybook-static' # Built app content directory - optional

  # Publish package
  publish:
    name: 'Publish to GitHub Packages'
    # needs: [interaction-tests]
    runs-on: ubuntu-18.04
    if: github.repository_owner == 'adityarawat96'
    steps:
      - name: Upload
        uses: actions/download-artifact@v2
        with:
          name: package
      - uses: actions/setup-node@v1
        with:
          node-version: 18
          registry-url: https://npm.pkg.github.com/
          scope: '@adityarawat96'
      - run: echo "registry=https://npm.pkg.github.com/@adityarawat96" >> .npmrc
      - run: npm publish $(ls *.tgz)
        env:
          NODE_AUTH_TOKEN: ${{secrets.REPO_GIT_TOKEN}}
