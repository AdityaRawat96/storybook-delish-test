# Name of our action
name: Release

# The event that will trigger the action
on:
  push:
    branches: [main]

# What the action will do
jobs:
  # Run interaction tests
  interaction-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          #ðŸ‘‡ Sets the version of Node.js to use
          node-version: 18
      - name: Install dependencies
        run: yarn
      - name: Install Playwright
        run: npx playwright install --with-deps
      - name: Build Storybook
        run: yarn build-storybook --quiet
      - name: Serve Storybook and run tests
        run: |
          npx concurrently -k -s first -n "SB,TEST" -c "magenta,blue"             "npx http-server storybook-static --port 6006 --silent"             "npx wait-on tcp:127.0.0.1:6006 && yarn test-storybook"

  # Run visual tests
  visual-tests:
    # The operating system it will run on
    runs-on: ubuntu-latest
    # The list of steps that the action will go through
    steps:
      - uses: actions/checkout@v2
        with:
          #ðŸ‘‡ Fetches all history so Chromatic can compare against previous builds
          fetch-depth: 0

  # Build and deploy the Storybook
  build_and_deploy_storybook:
    runs-on: ubuntu-latest
    name: Build and Deploy Storybook
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APP_DEPLOYMENT_TOKEN }}
          repo_token: ${{ secrets.REPO_GIT_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: 'upload'
          app_location: '/' # App source code path
          app_build_command: 'npm run build-storybook'
          api_location: '' # Api source code path - optional
          output_location: '/storybook-static' # Built app content directory - optional


  # Run the release
  # release:
  #   runs-on: ubuntu-latest
  #   if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')"
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Prepare repository
  #       run: git fetch --unshallow --tags
  #     - name: Use Node.js 16.x
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18
  #     - name: Install dependencies
  #       uses: bahmutov/npm-install@v1
  #     - name: Create Release
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.REPO_GIT_TOKEN }}
  #         #ðŸ‘‡ npm token, see https://storybook.js.org/tutorials/design-systems-for-developers/react/en/distribute/ to obtain it
  #         NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  #       run: |
  #         yarn release
